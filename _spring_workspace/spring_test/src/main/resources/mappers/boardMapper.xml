<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.ezen.www.repository.BoardDAO">

<insert id="insert" parameterType="com.ezen.www.domain.BoardVO">
	insert into board(title, writer, content) values(#{title},#{writer},#{content})
</insert>

<select id="selectList" resultType="com.ezen.www.domain.BoardVO">
	select * from board where isDel = 'N' <include refid="search"></include>  order by bno desc limit #{pageStart}, #{qty}
</select>

<select id="getDetail" resultType="com.ezen.www.domain.BoardVO">
	select * from board where bno = #{bno}
</select>

<update id="readcountUpdate">
	update board set read_count=read_count+1 where bno=#{bno}
</update>

<update id="update">
	update board set title=#{title}, content=#{content},reg_date=now(), read_count=read_count-2 where bno = #{bno}
</update>

<update id="delete">
	<!-- delete from board where bno = #{bno} -->
	update board set isDel ='Y' where bno = #{bno}
</update>

<select id="getTotalCount" resultType="int">
	select count(bno) from board where isDel = 'N' <include refid="search"></include> 
</select>

<select id="selectBno" resultType="int">
	select max(bno) from board;
	<!-- select bno from board order by bno desc limit 0 -->
</select>

<!-- bno가 일치하는 comment의 count를 세어서 commentCount에 update하기 -->
<update id="updateCommentCount">
	update board b set commentCount = (select count(bno) from comment where bno = b.bno); 
</update>
<update id="updateFileCount">
update board b set fileCount = (select count(bno) from file where bno = b.bno); 
</update>

<!--  selcet*from board where isDel='N' and (..or..or..) -->
 <!-- 동시 검색을 위해서 배열과 반복문 사용 --> <!-- title,content,writer만 검색할거면 필요없다 -->
 <!--suffixOverrides="or" 뒤에 있는 or을 지워줘 라는 뜻 -->
<!-- 동적쿼리 사용법 -->
<sql id="search">
	<if test="type != null">
		<trim prefix="and (" suffix=")" suffixOverrides="or"> 
			<foreach collection="typeToArray" item="type"> 
				<trim suffix="or">
					<choose>
						<when test="type=='t'.toString()">
							title like concat('%',#{keyword},'%')
						</when>
						<when test="type=='w'.toString()">
							writer like concat('%',#{keyword},'%')
						</when>
						<when test="type=='c'.toString()">
							content like concat('%',#{keyword},'%')
						</when>
					</choose>				
				</trim>
			</foreach>
		</trim>	
	</if>
</sql>



</mapper>