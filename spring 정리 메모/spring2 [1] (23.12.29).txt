spring 서버, 인코딩, 프로젝트 설정 후
pom.xml 설정 (저번꺼랑 똑같음)

(log4j대신 (모두 주석처리) mvn에 Logback Classic Module » 1.4.5 Logback Core Module » 1.4.5)


Log4Jdbc Log4j2 JDBC 4 1 » 1.16


src/main/resources에 logback.xml 생성 후 logback공식 사이트에서 가져오기 (밑에꺼 복붙)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>

<configuration debug="true">

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are  by default assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
    <encoder>
      <pattern>%d %5p [%c] %msg%n</pattern>
    </encoder>
  </appender>

	<logger name="com.myweb.www" level="info" appender-ref="STDOUT"></logger>
	<logger name="org.springframework" level="info" appender-ref="STDOUT"></logger>
	<logger name="org.springframework.jdbc" level="info" appender-ref="STDOUT"></logger>
	<logger name="jdbc.sqlonly" level="info" appender-ref="STDOUT"></logger>
	<logger name="jdbc.resultsettable" level="info" appender-ref="STDOUT"></logger>

  <root level="info">
    <appender-ref ref="STDOUT" />
  </root>
</configuration>



domain ---- 등등 패키지 만들기
homecontroller에서 return index로 변경

web.xml root.xml sevelet.xml 삭제 (spring폴더 삭제해도 ㄱㅊ)


pom.xml </plugin>아래 </plugins> 위에 

 <!-- web.xml 삭제, javaConfig 설정하기위한 추가 설정 -->
            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                	<failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>


config 패키지에서 WebConfig클래스RootConfig 클래스, ServletConfiguration 클래스 생성
public class Webconfig extends AbstractAnnotationConfigDispatcherServletInitializer (추상클래스임)
에러에 add추가 -> Override3개 생성될거임


package com.myweb.www.config;

import javax.servlet.Filter;
import javax.servlet.ServletRegistration.Dynamic;

import org.springframework.web.filter.CharacterEncodingFilter;
import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;

public class Webconfig extends AbstractAnnotationConfigDispatcherServletInitializer {

	@Override
	protected Class<?>[] getRootConfigClasses() {
		// TODO Auto-generated method stub
		return new Class[] {RootConfig.class};
	}

	@Override
	protected Class<?>[] getServletConfigClasses() {
		// TODO Auto-generated method stub
		return new Class[] {ServletConfiguration.class};
	}

	@Override
	protected String[] getServletMappings() {
		// TODO Auto-generated method stub
		return new String[] {"/"};  //기본 index로 가는 경로
	}

	@Override
	protected Filter[] getServletFilters() {
		// 필터 설정
		CharacterEncodingFilter encoding = new CharacterEncodingFilter();
		encoding.setEncoding("UTF-8");
		encoding.setForceEncoding(true); //외부로 나가는 데이터도 인코딩 설정
		return new Filter[] {encoding};
	}

	@Override
	protected void customizeRegistration(Dynamic registration) {
		// 그 외 기타 설정
		//multipartConfig 설정
		//사용자지정설정
		super.customizeRegistration(registration);
	}

	//EncodingFilter 설정
	
	
}



ServletConfiguration에

package com.myweb.www.config;

import org.springframework.context.annotation.ComponentScan;
import org.springframework.web.servlet.config.annotation.EnableWebMvc;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewResolverRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import org.springframework.web.servlet.view.InternalResourceViewResolver;
import org.springframework.web.servlet.view.JstlView;

@EnableWebMvc
@ComponentScan(basePackages = {"com.myweb.www.controller","com.myweb.www.handler"})
public class ServletConfiguration implements WebMvcConfigurer{

	@Override
	public void addResourceHandlers(ResourceHandlerRegistry registry) {
		// resources 경로 설정 / 나중에 파일 업로드 경로 설정 추가
		registry.addResourceHandler("/resources/**").addResourceLocations("/resources");

	}

	@Override
	public void configureViewResolvers(ViewResolverRegistry registry) {
		// 뷰 경로 설정
		InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
		viewResolver.setPrefix("/WEB-INF/views/");
		viewResolver.setSuffix(".jsp");
		viewResolver.setViewClass(JstlView.class);
		
		registry.viewResolver(viewResolver);
	}
	
	//multipartResolver 설정

	
	
}

